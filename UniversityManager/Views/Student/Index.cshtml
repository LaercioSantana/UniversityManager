@model PagedList.IPagedList<UniversityManager.Models.Student>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@section Styles {
    <link href="@Url.Content("~/Content/student/index.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<div class="filter-header">
    <a href="@Url.Action("Create")" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-plus"></span> Create New </a>

    @using (Html.BeginForm("Index", "Student", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" class="btn btn-primary btn-sm" />
            <input type="hidden" name="pageSize" value="@ViewBag.pageSize" />
        </p>
    }

    <select name="page-size-select" onchange="location = this.value;">
        @foreach (var itemPageSize in ViewBag.availablePageSizes)
        {
            <option value="?pageSize=@itemPageSize" @(itemPageSize == ViewBag.pageSize ? "selected" : "")>@itemPageSize items per page</option>
        }
    </select>
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.pageSize })
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.pageSize })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.pageSize }))
